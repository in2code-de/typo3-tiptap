.tiptap-container {
  /* Primitive colors */
  --tiptap-color-primary: light-dark(hsl(220deg 90% 56%), hsl(220deg 90% 66%));
  --tiptap-color-neutral-white: hsl(0deg 0% 100%);
  --tiptap-color-neutral-10: hsl(0deg 0% 10%);
  --tiptap-color-neutral-20: hsl(0deg 0% 20%);
  --tiptap-color-neutral-30: hsl(0deg 0% 30%);
  --tiptap-color-neutral-80: hsl(0deg 0% 80%);
  --tiptap-color-neutral-90: hsl(0deg 0% 90%);

  /* Semantic colors */
  --tiptap-color-surface: light-dark(var(--tiptap-color-neutral-white), var(--tiptap-color-neutral-10));
  --tiptap-color-surface-highlight: light-dark(var(--tiptap-color-neutral-90), var(--tiptap-color-neutral-20));
  --tiptap-color-surface-border: light-dark(var(--tiptap-color-neutral-90), var(--tiptap-color-neutral-20));
  --tiptap-color-text-disabled: light-dark(var(--tiptap-color-neutral-30), var(--tiptap-color-neutral-80));

  /* Utility variables */
  --tiptap-border-radius: 0.7rem;
  --tiptap-border-radius-inner-gap: 0.25rem;
  --tiptap-border-inner-radius: calc(var(--tiptap-border-radius) - var(--tiptap-border-radius-inner-gap));
  --tiptap-toolbar-gap: 0.25rem;
  --tiptap-box-shadow: 0 0.1rem 0.3rem rgb(0 0 0 / 0.1);

  border: 1px solid var(--tiptap-color-surface-border);
  border-radius: var(--tiptap-border-radius);
  overflow: hidden;

  /* Button reset */
  :where(& button) {
    padding: 0;
    color: inherit;
    background-color: transparent;
    border: none;
  }

  /* Temporary styling before implementation into TYPO3 */
  background-color: light-dark(white, var(--tiptap-color-neutral-10));
  color: light-dark(black, white);
}

.tiptap {
  padding: 3rem;
  min-block-size: 20rem;
  outline: none;

  > :first-child {
    margin-block-start: 0;
  }
}

.tiptap-toolbar {
  display: flex;
  flex-wrap: wrap;
  padding: var(--tiptap-border-radius-inner-gap);
  background-color: var(--tiptap-color-surface);
  border-block-end: 1px solid var(--tiptap-color-surface-border);
}

.tiptap-toolbar__group {
  display: flex;
  flex-wrap: wrap;
  gap: var(--tiptap-toolbar-gap);
  margin: 0;
  padding: 0;
  list-style: none;
}

.tiptap-toolbar__group:not(:last-child) {
  margin-inline-end: var(--tiptap-toolbar-gap);
  padding-inline-end: var(--tiptap-toolbar-gap);
  border-inline-end: 1px solid var(--tiptap-color-surface-border);
}

.tiptap-toolbar__group-command {
  padding: 0.5rem;
  border-radius: var(--tiptap-border-inner-radius);
  aspect-ratio: 1/1;
  block-size: 100%;
  transition: ease 0.15s;
  transition-property: background-color, color, transform;

  &:is(:hover, :focus):not(:disabled, .is-active) {
    background-color: color-mix(in hsl, var(--tiptap-color-surface-highlight) 50%, transparent);
  }

  &:active:not(:disabled) {
    transform: scale(0.8);
  }

  &:not(:disabled) {
    cursor: pointer;
  }

  &:disabled {
    color: var(--tiptap-color-text-disabled);
    cursor: not-allowed;
  }

  &.is-active {
    background-color: var(--tiptap-color-surface-highlight);
    color: var(--tiptap-color-primary);
  }
}

.tiptap-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.icon-wrapper {
  display: inline-block;
  position: relative;
}

.icon-wrapper svg {
  inline-size: 100%;
  block-size: 100%;
}

.tiptap-bubble-menu {
  display: flex;
  padding: var(--tiptap-border-radius-inner-gap);
  background-color: var(--tiptap-color-surface);
  border: 1px solid var(--tiptap-color-surface-border);
  border-radius: var(--tiptap-border-radius);
  box-shadow: var(--tiptap-box-shadow);
  gap: var(--tiptap-toolbar-gap);

  .tiptap-command-button {
    border-radius: var(--tiptap-border-inner-radius);
  }
}

.ProseMirror {
  padding: 1rem 1rem 1rem 0;

  * {
    margin-top: 0.75em;
  }

  >
  .ProseMirror-widget * {
    margin-top: auto;
  }

  ul,
  ol {
    padding: 0 1rem;
  }
}

.tiptap-dropdown {
  --chevron-rotation: 0deg;

  display: inline-block;
  position: relative;

  &:has(&__button[aria-expanded='true']) {
    --chevron-rotation: 180deg;
  }

  &__button {
    display: inline-flex;
    align-items: center;
    justify-content: space-between;
    padding: 0.5rem;
    background-color: transparent;
    gap: 0.25rem;
    border: none;
    cursor: pointer;
    transition:
      color 0.2s ease-in-out,
      transform 0.1s ease-in-out;

    * {
      flex-shrink: 0;
    }

    &--active {
      color: var(--tiptap-color-primary);
    }

    &:disabled {
      color: var(--tiptap-color-text-disabled);
      cursor: not-allowed;
    }
  }

  &__button-icon {
    --icon-size: 0.9em;

    inline-size: var(--icon-size);
    block-size: var(--icon-size);
    transform: rotate(var(--chevron-rotation));
    transform-origin: center;
    transition: transform 0.2s ease-in-out;
  }

  &__content {
    display: grid;
    position: absolute;
    padding-block: 0.25rem;
    background-color: var(--tiptap-color-surface);
    border: 1px solid var(--tiptap-color-surface-border);
    border-radius: var(--tiptap-border-radius);
    box-shadow: var(--tiptap-box-shadow);
    z-index: 10;

    &:not(&--bottom-left):not(&--bottom-right) {
      visibility: hidden;
      opacity: 0;
    }

    &--bottom-left {
      inset-inline-start: 0;
      transform-origin: top left;
    }

    &--bottom-right {
      inset-inline-end: 0;
      transform-origin: top right;
    }
  }

  &__content-button {
    display: flex;
    align-items: center;
    padding: 0.5rem 1rem;
    gap: 0.5rem;
    cursor: pointer;

    > * {
      flex-shrink: 0;
      text-wrap: nowrap;
    }

    &--active {
      color: var(--tiptap-color-primary);
    }
  }
}

.ProseMirror-noderangeselection {
  *::selection {
    background: transparent;
  }

  * {
    caret-color: transparent;
  }
}

.ProseMirror-selectednode,
.ProseMirror-selectednoderange {
  position: relative;

  &::before {
    position: absolute;
    pointer-events: none;
    z-index: -1;
    content: '';
    top: -0.25rem;
    left: -0.25rem;
    right: -0.25rem;
    bottom: -0.25rem;
    background-color: #70cff850;
    border-radius: 0.2rem;
  }
}

.custom-drag-handle {

  &::after {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 1rem;
    height: 1.25rem;
    margin-inline-end: 0.5rem;
    padding: 0.25rem 0.1rem;
    content: 'â ¿';
    font-weight: 700;
    cursor: grab;
    color: light-dark(var(--tiptap-color-neutral-10), var(--tiptap-color-neutral-90));
    border-radius: 0.25rem;
    transition: background-color 0.2s ease-in-out;
  }

  &:is(:hover, :focus)::after {
    background: var(--tiptap-color-surface-highlight);
  }
}

.pl-9 {
  padding-left: 2.25rem;
}

.transition-dropdown {
  --scale: 1;
  --translate-y: 0;
  --opacity: 1;

  $this: &;

  transform: scale(var(--scale)) translateY(var(--translate-y));
  opacity: var(--opacity);
  transition:
    transform 75ms cubic-bezier(0.4, 0, 1, 1),
    opacity 75ms cubic-bezier(0.4, 0, 1, 1);

  &-enter-from {
    --scale: 0.95;
    --opacity: 1;
  }

  &-enter-to {
    --scale: 1;
    --opacity: 1;
  }

  &-leave-from {
    --scale: 1;
    --opacity: 1;
  }

  &-leave-to {
    --scale: 0.95;
    --opacity: 0;
  }
}
